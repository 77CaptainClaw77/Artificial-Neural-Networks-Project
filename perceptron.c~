#include <stdio.h>//For standard IO
#include <stdlib.h>//For rand function
#include <time.h>//To set seed for rand function
#include <math.h>//For exponential function
int binary_activation_function(float n)//Computes f(x) where x is the activation value.
{
  return (n>=0?1:0);
}
float sigmoid_activation(float n)//Non linear activation function
{
  return (1/(1-exp(n)));
}
void initialize_weights(float w_arr[],int n)//Initializes the weight vector
{
  srand(time(NULL));
  int i;
  for(i=0;i<n;i++)
  w_arr[i]=(rand()%2)-1;//To generate between -1 and 1*/
}
int estimate_value(float i_arr[],float w_arr[],int n)//Computes the value of f(x) based on values of x vector and the weight vector
{
  float val=0.0;
  int i;
  for(i=0;i<n;i++)
    val=val+(i_arr[i]*w_arr[i]);//Computes the sum of products of weights and inputs
  int y=binary_activation_function(val);
  return y;
}
void run_perceptron()//Runs the perceptron by initializing weights and estimating values
{ 
  int n=2;
  float i_arr[]={1,1};
  float w_arr[]={0,0};
  initialize_weights(w_arr,n);
  int y=estimate_value(i_arr,w_arr,n);
  printf("%d",y);
}
int main()
{
  //run_perceptron();
  return 0;
}
